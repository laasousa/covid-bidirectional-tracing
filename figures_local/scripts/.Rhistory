library(tidyverse)
library(cowplot)
library(metR)
library(reshape2)
library(scales)
library(viridis)
#==============================================================================
# Read in data
#==============================================================================
asym_path <- "figures_local/data/si_asym_contour_500_scenario.tsv.gz"
asym_data <- suppressMessages(read_tsv(asym_path))
#==============================================================================
# Process data
#==============================================================================
#------------------------------------------------------------------------------
# Processing functions
#------------------------------------------------------------------------------
ttype_levels <- c("Manual only", "Manual + digital",
"Digital only", "No tracing")
label_data <- function(data, p_traced = 0.9){
data %>% filter(p_traced_auto %in% c(-1, 0, p_traced),
p_traced_manual %in% c(-1, 0, p_traced)) %>%
mutate(bt_type = ifelse(backtrace_distance == 0, "Forward-only",
"Bidirectional"),
trace_window = paste0(contact_limit_manual, "-day manual window"),
row_label = paste(bt_type, trace_window, sep=",\n"),
trace_type = ifelse(p_traced_auto == 0,
ifelse(p_traced_manual == 0, "No tracing", "Manual only"),
ifelse(p_traced_manual == 0, "Digital only", "Manual + digital"))) %>%
mutate(trace_type = factor(trace_type, levels = ttype_levels))
}
index_data <- function(data, key_x = "p_asymptomatic", key_y = "rel_r0_asymptomatic"){
# Compute index levels
levels_x <- sort(unique(data[[key_x]]))
levels_y <- sort(unique(data[[key_y]]))
# Assign indices
data_indexed <- data %>%
mutate(index_x = match(!!sym(key_x), levels_x),
index_y = match(!!sym(key_y), levels_y))
return(data_indexed)
}
smooth_data_single <- function(data){
indices_x <- sort(unique(data$index_x))
indices_y <- sort(unique(data$index_y))
index_tab <- expand_grid(index_x = indices_x, index_y = indices_y)
smoothed_control <- sapply(1:nrow(index_tab), function(n)
data %>% filter(abs(index_x - index_tab$index_x[n]) <= 1,
abs(index_y - index_tab$index_y[n]) <= 1) %>%
pull(p_controlled) %>% mean)
smoothed_r_eff <- sapply(1:nrow(index_tab), function(n)
data %>% filter(abs(index_x - index_tab$index_x[n]) <= 1,
abs(index_y - index_tab$index_y[n]) <= 1) %>%
pull(effective_r0_mean) %>% mean)
index_tab_smoothed <- mutate(index_tab,
p_controlled_smoothed = smoothed_control,
r_eff_smoothed = smoothed_r_eff)
data_smoothed <- inner_join(data, index_tab_smoothed,
by=c("index_x", "index_y"))
return(data_smoothed)
}
smooth_data <- function(data, group_vars = c("trace_type", "row_label")){
data_split <- data %>% group_by_at(group_vars) %>% group_split()
data_smoothed_split <- lapply(data_split, smooth_data_single)
return(bind_rows(data_smoothed_split) %>% ungroup %>%
mutate(pc_controlled_smoothed = p_controlled_smoothed*100))
}
#------------------------------------------------------------------------------
# Apply to data
#------------------------------------------------------------------------------
# Label data
asym_data_labelled <- label_data(asym_data)
